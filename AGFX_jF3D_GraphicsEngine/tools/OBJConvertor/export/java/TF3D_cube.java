package agfx.F3D.MESH;



import AGFX.F3D.F3D;
import AGFX.F3D.Entity.TF3D_Entity;
import static org.lwjgl.opengl.GL11.*;
import static org.lwjgl.opengl.GL13.*;

public class TA3D_cube extends TA3D_Entity
{
    private float vertices[] = {
                               0.500000000f, 0.500000000f, 0.500000000f,
                               -0.500000000f, 0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, 0.500000000f,
                               -0.500000000f, -0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, 0.500000000f,
                               -0.500000000f, 0.500000000f, 0.500000000f,
                               0.500000000f, 0.500000000f, -0.500000000f,
                               0.500000000f, 0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, -0.500000000f,
                               0.500000000f, -0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, -0.500000000f,
                               0.500000000f, 0.500000000f, 0.500000000f,
                               -0.500000000f, 0.500000000f, -0.500000000f,
                               0.500000000f, 0.500000000f, -0.500000000f,
                               -0.500000000f, -0.500000000f, -0.500000000f,
                               0.500000000f, -0.500000000f, -0.500000000f,
                               -0.500000000f, -0.500000000f, -0.500000000f,
                               0.500000000f, 0.500000000f, -0.500000000f,
                               -0.500000000f, 0.500000000f, -0.500000000f,
                               -0.500000000f, 0.500000000f, 0.500000000f,
                               0.500000000f, 0.500000000f, -0.500000000f,
                               0.500000000f, 0.500000000f, 0.500000000f,
                               0.500000000f, 0.500000000f, -0.500000000f,
                               -0.500000000f, 0.500000000f, 0.500000000f,
                               -0.500000000f, -0.500000000f, -0.500000000f,
                               0.500000000f, -0.500000000f, -0.500000000f,
                               -0.500000000f, -0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, 0.500000000f,
                               -0.500000000f, -0.500000000f, 0.500000000f,
                               0.500000000f, -0.500000000f, -0.500000000f,
                               -0.500000000f, 0.500000000f, 0.500000000f,
                               -0.500000000f, 0.500000000f, -0.500000000f,
                               -0.500000000f, -0.500000000f, 0.500000000f,
                               -0.500000000f, -0.500000000f, -0.500000000f,
                               -0.500000000f, -0.500000000f, 0.500000000f,
                               -0.500000000f, 0.500000000f, -0.500000000f,
                               };
    private float normals[] = {
                               0.000000000f, 0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f, 0.000000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 0.000000000f, -1.00000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               0.000000000f, -1.00000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               -1.00000000f, 0.000000000f, 0.000000000f,
                               };
    private float texture[] = {
                               1.00000000f, 1.00000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               1.00000000f, 1.00000000f,
                               0.000000000f, 1.00000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 0.000000000f,
                               1.00000000f, 0.000000000f,
                               0.000000000f, 1.00000000f,
                               };
    private int indices[] = {
                               0, 1,2,
                               3, 4,5,
                               6, 7,8,
                               9, 10,11,
                               12, 13,14,
                               15, 16,17,
                               18, 19,20,
                               21, 22,23,
                               24, 25,26,
                               27, 28,29,
                               30, 31,32,
                               33, 34,35,
                               };

public int material_id;
public TF3D_VBO vbo;

 public TF3D_cube()
 {
  this.classname = "CLASS_MESH";
  this.vbo = new TF3D_VBO();
  this.vbo.CreateVertexBuffer(this.vertices);
  this.vbo.CreateNormalBuffer(this.normals);
  this.vbo.CreateTextureBuffer(this.texture,GL_TEXTURE0);
  this.vbo.CreateTextureBuffer(this.texture,GL_TEXTURE1);
  this.vbo.CreateIndicesBuffer(this.indices);
  this.vbo.Build();
 }

 public void draw()
 {

  if (this.material_id != -1)
  {
      F3D.Surfaces.ApplyMaterial(this.material_id);
  }

  glPushMatrix();

  glScalef(this.scale.x, this.scale.y, this.scale.z);
  glTranslatef(this.position.x, this.position.y, this.position.z);

  glRotatef(this.rotation.x, 1.0f, 0.0f, 0.0f);
  glRotatef(this.rotation.y, 0.0f, 1.0f, 0.0f);
  glRotatef(this.rotation.z, 0.0f, 0.0f, 1.0f);

  this.vbo.DrawVertexBuffer();

  glScalef(1, 1, 1);
  glPopMatrix();
 }

}
